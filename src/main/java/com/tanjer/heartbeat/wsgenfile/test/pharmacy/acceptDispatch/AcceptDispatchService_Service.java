package com.tanjer.heartbeat.wsgenfile.test.pharmacy.acceptDispatch;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.5.9
 * 2024-11-18T15:20:48.300+05:30
 * Generated source version: 3.5.9
 *
 */
@WebServiceClient(name = "AcceptDispatchService",
                  wsdlLocation = "file:/C:/Users/USER/AppData/Local/Temp/tempdir4207592582584442554.tmp/AcceptDispatchService_1.wsdl",
                  targetNamespace = "http://dtts.sfda.gov.sa/AcceptDispatchService")
public class AcceptDispatchService_Service extends Service {

    public static final URL WSDL_LOCATION;

    public static final QName SERVICE = new QName("http://dtts.sfda.gov.sa/AcceptDispatchService", "AcceptDispatchService");
    public static final QName AcceptDispatchService = new QName("http://dtts.sfda.gov.sa/AcceptDispatchService", "AcceptDispatchService");
    static {
        URL url = null;
        try {
            url = new URL("file:/C:/Users/USER/AppData/Local/Temp/tempdir4207592582584442554.tmp/AcceptDispatchService_1.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(AcceptDispatchService_Service.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "file:/C:/Users/USER/AppData/Local/Temp/tempdir4207592582584442554.tmp/AcceptDispatchService_1.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public AcceptDispatchService_Service(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public AcceptDispatchService_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public AcceptDispatchService_Service() {
        super(WSDL_LOCATION, SERVICE);
    }

    public AcceptDispatchService_Service(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public AcceptDispatchService_Service(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public AcceptDispatchService_Service(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns AcceptDispatchService
     */
    @WebEndpoint(name = "AcceptDispatchService")
    public AcceptDispatchService getAcceptDispatchService() {
        return super.getPort(AcceptDispatchService, AcceptDispatchService.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AcceptDispatchService
     */
    @WebEndpoint(name = "AcceptDispatchService")
    public AcceptDispatchService getAcceptDispatchService(WebServiceFeature... features) {
        return super.getPort(AcceptDispatchService, AcceptDispatchService.class, features);
    }

}
